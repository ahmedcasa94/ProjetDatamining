import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn
import statsmodels.api as sm
import statsmodels.formula.api as smf
from scipy.stats import poisson,skellam
from sklearn.externals import joblib

epl_1617 = pd.read_csv("D:/Etudes Et projets/INSAT/RT5/datamining/projet/results.csv")
epl_1617 = epl_1617[['home_team','away_team','home_ft','away_ft']]
epl_1617 = epl_1617.rename(columns={'home_team': 'HomeTeam','away_team': 'AwayTeam','home_ft': 'HomeGoals', 'away_ft': 'AwayGoals'})
epl_1617 = epl_1617[:33300]


goal_model_data = pd.concat([epl_1617[['HomeTeam','AwayTeam','HomeGoals']].assign(home=1).rename(
            columns={'HomeTeam':'team', 'AwayTeam':'opponent','HomeGoals':'goals'}),
           epl_1617[['AwayTeam','HomeTeam','AwayGoals']].assign(home=0).rename(
            columns={'AwayTeam':'team', 'HomeTeam':'opponent','AwayGoals':'goals'})])

poisson_model = smf.glm(formula="goals ~ home + team + opponent", data=goal_model_data,
                        family=sm.families.Poisson()).fit()
filename = 'finalized_model.sav'
joblib.dump(poisson_model, filename)
def simulate_match(foot_model, homeTeam, awayTeam, max_goals=10):
    home_goals_avg = foot_model.predict(pd.DataFrame(data={'team': homeTeam,
                                                            'opponent': awayTeam,'home':1},
                                                      index=[1])).values[0]
    away_goals_avg = foot_model.predict(pd.DataFrame(data={'team': awayTeam,
                                                            'opponent': homeTeam,'home':0},
                                                      index=[1])).values[0]
    team_pred = [[poisson.pmf(i, team_avg) for i in range(0, max_goals+1)] for team_avg in [home_goals_avg, away_goals_avg]]
    return(np.outer(np.array(team_pred[0]), np.array(team_pred[1])))

tun_eng = simulate_match(poisson_model, "Tunisia", "England", max_goals=10)
# chelsea win
np.sum(np.tril(tun_eng, -1))
# draw
np.sum(np.diag(tun_eng))
# sunderland win
np.sum(np.triu(tun_eng, 1))

